[
  {
    "step_number": 0,
    "why_text": "Set up your environment so your computer is ready.",
    "prompt_text": "I am on Windows using PowerShell. Give me step-by-step commands to install Node.js LTS, Git, and VS Code. Include verification commands and troubleshooting."
  },
  {
    "step_number": 1,
    "why_text": "Scaffold your repo structure.",
    "prompt_text": "Create a monorepo with apps/api and apps/web using npm workspaces."
  },
  {
    "step_number": 2,
    "why_text": "Set up the API foundation with proper structure.",
    "prompt_text": "In apps/api, initialize a TypeScript Express server with cors, helmet, morgan middleware. Include proper error handling and a health check endpoint."
  },
  {
    "step_number": 3,
    "why_text": "Set up the frontend foundation.",
    "prompt_text": "In apps/web, create a React + TypeScript + Vite app with Tailwind CSS. Set it up to connect to the API and display a hello message."
  },
  {
    "step_number": 4,
    "why_text": "Enable concurrent development workflow.",
    "prompt_text": "Add npm scripts to run both API and web dev servers concurrently using the concurrently package."
  },
  {
    "step_number": 5,
    "why_text": "Secure environment variable management.",
    "prompt_text": "Set up environment variables with dotenv for both API and web apps. Include .env.example files and proper .gitignore configuration."
  },
  {
    "step_number": 6,
    "why_text": "Add AI capabilities to your application.",
    "prompt_text": "Integrate OpenAI API into the Express server with secure key management, error handling, and a test endpoint for chat completions."
  },
  {
    "step_number": 7,
    "why_text": "Create a user interface for AI interactions.",
    "prompt_text": "Build a React component that connects to your AI API endpoint with proper loading states, error handling, and a clean UI design."
  },
  {
    "step_number": 8,
    "why_text": "Persist data for your application.",
    "prompt_text": "Set up Supabase database with tables for projects, steps, and history. Include the client configuration and basic CRUD operations."
  },
  {
    "step_number": 9,
    "why_text": "Version control and collaboration setup.",
    "prompt_text": "Initialize Git repository, create proper .gitignore, set up GitHub repository, and make your first commit with meaningful commit messages."
  },
  {
    "step_number": 10,
    "why_text": "Prepare for deployment and production.",
    "prompt_text": "Set up build scripts, environment configurations for production, and basic CI/CD pipeline using GitHub Actions for automated testing and deployment."
  }
]
